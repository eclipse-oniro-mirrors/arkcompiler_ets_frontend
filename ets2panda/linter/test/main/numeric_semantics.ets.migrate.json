{
    "copyright": [
        "Copyright (c) 2025 Huawei Device Co., Ltd.",
        "Licensed under the Apache License, Version 2.0 (the 'License');",
        "you may not use this file except in compliance with the License.",
        "You may obtain a copy of the License at",
        "",
        "http://www.apache.org/licenses/LICENSE-2.0",
        "",
        "Unless required by applicable law or agreed to in writing, software",
        "distributed under the License is distributed on an 'AS IS' BASIS,",
        "WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.",
        "See the License for the specific language governing permissions and",
        "limitations under the License."
    ],
    "result": [
        {
            "line": 67,
            "column": 5,
            "endLine": 67,
            "endColumn": 15,
            "problem": "DefiniteAssignmentError",
            "suggest": "",
            "rule": "Definite assignment assertions are not supported (arkts-no-definite-assignment)",
            "severity": "ERROR"
        },
        {
            "line": 67,
            "column": 5,
            "endLine": 67,
            "endColumn": 6,
            "problem": "VariableMissingInitializer",
            "suggest": "",
            "rule": "After a variable is declared, a value must be assigned before using it (arkts-var-assignment-before-use)",
            "severity": "ERROR"
        },
        {
            "line": 102,
            "column": 19,
            "endLine": 102,
            "endColumn": 24,
            "problem": "ParameterType",
            "suggest": "",
            "rule": "Type of parameter must be defined explicitly (arkts-require-func-arg-type)",
            "severity": "ERROR"
        },
        {
            "line": 102,
            "column": 26,
            "endLine": 102,
            "endColumn": 31,
            "problem": "ParameterType",
            "suggest": "",
            "rule": "Type of parameter must be defined explicitly (arkts-require-func-arg-type)",
            "severity": "ERROR"
        },
        {
            "line": 117,
            "column": 19,
            "endLine": 117,
            "endColumn": 19,
            "problem": "ArrayIndexExprType",
            "suggest": "",
            "rule": "The index expression must be of a numeric type (arkts-array-index-expr-type)",
            "severity": "ERROR"
        },
        {
            "line": 153,
            "column": 7,
            "endLine": 153,
            "endColumn": 123,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 162,
            "column": 9,
            "endLine": 162,
            "endColumn": 61,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 171,
            "column": 61,
            "endLine": 171,
            "endColumn": 67,
            "problem": "RuntimeArrayCheck",
            "suggest": "",
            "rule": "Array bound not checked. (arkts-runtime-array-check)",
            "severity": "ERROR"
        },
        {
            "line": 172,
            "column": 61,
            "endLine": 172,
            "endColumn": 67,
            "problem": "RuntimeArrayCheck",
            "suggest": "",
            "rule": "Array bound not checked. (arkts-runtime-array-check)",
            "severity": "ERROR"
        },
        {
            "line": 195,
            "column": 6,
            "endLine": 195,
            "endColumn": 13,
            "problem": "RuntimeArrayCheck",
            "suggest": "",
            "rule": "Array bound not checked. (arkts-runtime-array-check)",
            "severity": "ERROR"
        },
        {
            "line": 209,
            "column": 1,
            "endLine": 209,
            "endColumn": 40,
            "problem": "ImportAfterStatement",
            "suggest": "",
            "rule": "\"import\" statements after other statements are not allowed (arkts-no-misplaced-imports)",
            "severity": "ERROR"
        },
        {
            "line": 211,
            "column": 5,
            "endLine": 211,
            "endColumn": 35,
            "problem": "AnyType",
            "suggest": "",
            "rule": "Use explicit types instead of \"any\", \"unknown\" (arkts-no-any-unknown)",
            "severity": "ERROR"
        },
        {
            "line": 211,
            "column": 16,
            "endLine": 211,
            "endColumn": 25,
            "problem": "DynamicCtorCall",
            "suggest": "",
            "rule": "\"new\" expression with dynamic constructor type is not supported (arkts-no-dynamic-ctor-call)",
            "severity": "ERROR"
        },
        {
            "line": 217,
            "column": 42,
            "endLine": 217,
            "endColumn": 51,
            "problem": "DynamicCtorCall",
            "suggest": "",
            "rule": "\"new\" expression with dynamic constructor type is not supported (arkts-no-dynamic-ctor-call)",
            "severity": "ERROR"
        },
        {
            "line": 263,
            "column": 1,
            "endLine": 263,
            "endColumn": 7,
            "problem": "RuntimeArrayCheck",
            "suggest": "",
            "rule": "Array bound not checked. (arkts-runtime-array-check)",
            "severity": "ERROR"
        },
        {
            "line": 267,
            "column": 33,
            "endLine": 267,
            "endColumn": 36,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 273,
            "column": 31,
            "endLine": 273,
            "endColumn": 34,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 273,
            "column": 36,
            "endLine": 273,
            "endColumn": 39,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 273,
            "column": 41,
            "endLine": 273,
            "endColumn": 44,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 276,
            "column": 33,
            "endLine": 276,
            "endColumn": 36,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 276,
            "column": 38,
            "endLine": 276,
            "endColumn": 41,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 276,
            "column": 43,
            "endLine": 276,
            "endColumn": 46,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 276,
            "column": 48,
            "endLine": 276,
            "endColumn": 51,
            "problem": "NumericSemantics",
            "suggest": "",
            "rule": "Numeric semantics is different for integer values (arkts-numeric-semantic)",
            "severity": "ERROR"
        },
        {
            "line": 285,
            "column": 1,
            "endLine": 285,
            "endColumn": 7,
            "problem": "RuntimeArrayCheck",
            "suggest": "",
            "rule": "Array bound not checked. (arkts-runtime-array-check)",
            "severity": "ERROR"
        }
    ]
}
