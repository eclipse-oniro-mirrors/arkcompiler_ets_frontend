{
  "type": "Program",
  "statements": [
    {
      "type": "ClassDeclaration",
      "definition": {
        "id": {
          "type": "Identifier",
          "name": "ETSGLOBAL"
        },
        "superClass": null,
        "implements": [],
        "body": [
          {
            "type": "ClassProperty",
            "key": {
              "type": "Identifier",
              "name": "a"
            },
            "value": {
              "type": "CallExpression",
              "callee": {
                "type": "Identifier",
                "name": "GoodGreeter"
              },
              "arguments": [],
              "optional": false
            },
            "accessibility": "public",
            "static": true,
            "readonly": false,
            "declare": false,
            "optional": false,
            "computed": false,
            "definite": false
          },
          {
            "type": "ClassProperty",
            "key": {
              "type": "Identifier",
              "name": "c"
            },
            "accessibility": "public",
            "static": true,
            "readonly": false,
            "declare": false,
            "optional": false,
            "computed": false,
            "typeAnnotation": {
              "type": "ETSTypeReference",
              "part": {
                "type": "ETSTypeReferencePart",
                "name": {
                  "type": "Identifier",
                  "name": "GoodGreeter"
                }
              }
            },
            "definite": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "main"
            },
            "kind": "method",
            "accessibility": "public",
            "static": true,
            "optional": false,
            "computed": false,
            "value": {
              "type": "FunctionExpression",
              "function": {
                "type": "ScriptFunction",
                "id": {
                  "type": "Identifier",
                  "name": "main"
                },
                "generator": false,
                "async": false,
                "expression": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "statements": [
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "m",
                            "typeAnnotation": {
                              "type": "ETSPrimitiveType"
                            }
                          },
                          "init": {
                            "type": "NumberLiteral",
                            "value": 1
                          }
                        }
                      ],
                      "kind": "let"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "n",
                            "typeAnnotation": {
                              "type": "ETSPrimitiveType"
                            }
                          },
                          "init": {
                            "type": "NumberLiteral",
                            "value": 2
                          }
                        }
                      ],
                      "kind": "let"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "f",
                            "typeAnnotation": {
                              "type": "ETSPrimitiveType"
                            }
                          },
                          "init": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "b"
                            },
                            "computed": false,
                            "optional": false
                          }
                        }
                      ],
                      "kind": "let"
                    },
                    {
                      "type": "VariableDeclaration",
                      "declarations": [
                        {
                          "type": "VariableDeclarator",
                          "id": {
                            "type": "Identifier",
                            "name": "k",
                            "typeAnnotation": {
                              "type": "ETSTypeReference",
                              "part": {
                                "type": "ETSTypeReferencePart",
                                "name": {
                                  "type": "Identifier",
                                  "name": "string"
                                }
                              }
                            }
                          },
                          "init": {
                            "type": "MemberExpression",
                            "object": {
                              "type": "Identifier",
                              "name": "c"
                            },
                            "property": {
                              "type": "Identifier",
                              "name": "name"
                            },
                            "computed": false,
                            "optional": false
                          }
                        }
                      ],
                      "kind": "let"
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "console"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "log"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "BinaryExpression",
                            "operator": "+",
                            "left": {
                              "type": "Identifier",
                              "name": "m"
                            },
                            "right": {
                              "type": "Identifier",
                              "name": "n"
                            }
                          }
                        ],
                        "optional": false
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "CallExpression",
                        "callee": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "Identifier",
                            "name": "console"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "log"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "arguments": [
                          {
                            "type": "Identifier",
                            "name": "k"
                          }
                        ],
                        "optional": false
                      }
                    }
                  ]
                }
              }
            },
            "overloads": []
          }
        ]
      }
    },
    {
      "type": "ClassDeclaration",
      "definition": {
        "id": {
          "type": "Identifier",
          "name": "GoodGreeter"
        },
        "superClass": null,
        "implements": [],
        "body": [
          {
            "type": "ClassProperty",
            "key": {
              "type": "Identifier",
              "name": "name"
            },
            "accessibility": "public",
            "static": false,
            "readonly": false,
            "declare": false,
            "optional": false,
            "computed": false,
            "typeAnnotation": {
              "type": "ETSTypeReference",
              "part": {
                "type": "ETSTypeReferencePart",
                "name": {
                  "type": "Identifier",
                  "name": "string"
                }
              }
            },
            "definite": false
          },
          {
            "type": "ClassProperty",
            "key": {
              "type": "Identifier",
              "name": "b"
            },
            "accessibility": "public",
            "static": false,
            "readonly": false,
            "declare": false,
            "optional": false,
            "computed": false,
            "typeAnnotation": {
              "type": "ETSPrimitiveType"
            },
            "definite": false
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "fooExample"
            },
            "kind": "method",
            "accessibility": "public",
            "static": false,
            "optional": false,
            "computed": false,
            "value": {
              "type": "FunctionExpression",
              "function": {
                "type": "ScriptFunction",
                "id": {
                  "type": "Identifier",
                  "name": "fooExample"
                },
                "generator": false,
                "async": false,
                "expression": false,
                "params": [],
                "returnType": {
                  "type": "ETSPrimitiveType"
                },
                "body": {
                  "type": "BlockStatement",
                  "statements": []
                }
              }
            },
            "overloads": []
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "$_invoke"
            },
            "kind": "method",
            "accessibility": "public",
            "static": true,
            "optional": false,
            "computed": false,
            "value": {
              "type": "FunctionExpression",
              "function": {
                "type": "ScriptFunction",
                "id": {
                  "type": "Identifier",
                  "name": "$_invoke"
                },
                "generator": false,
                "async": false,
                "expression": false,
                "params": [],
                "returnType": {
                  "type": "ETSPrimitiveType"
                },
                "body": {
                  "type": "BlockStatement",
                  "statements": [
                    {
                      "type": "ReturnStatement",
                      "argument": {
                        "type": "NumberLiteral",
                        "value": 5
                      }
                    }
                  ]
                }
              }
            },
            "overloads": []
          },
          {
            "type": "MethodDefinition",
            "key": {
              "type": "Identifier",
              "name": "constructor"
            },
            "kind": "constructor",
            "accessibility": "public",
            "static": false,
            "optional": false,
            "computed": false,
            "value": {
              "type": "FunctionExpression",
              "function": {
                "type": "ScriptFunction",
                "id": {
                  "type": "Identifier",
                  "name": "constructor"
                },
                "generator": false,
                "async": false,
                "expression": false,
                "params": [],
                "body": {
                  "type": "BlockStatement",
                  "statements": [
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "name"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "StringLiteral",
                          "value": "hello"
                        }
                      }
                    },
                    {
                      "type": "ExpressionStatement",
                      "expression": {
                        "type": "AssignmentExpression",
                        "operator": "=",
                        "left": {
                          "type": "MemberExpression",
                          "object": {
                            "type": "ThisExpression"
                          },
                          "property": {
                            "type": "Identifier",
                            "name": "b"
                          },
                          "computed": false,
                          "optional": false
                        },
                        "right": {
                          "type": "NumberLiteral",
                          "value": 7
                        }
                      }
                    }
                  ]
                }
              }
            },
            "overloads": []
          }
        ]
      }
    }
  ]
}
{
  "type": "ClassDeclaration",
  "definition": {
    "id": {
      "type": "Identifier",
      "name": "ETSGLOBAL"
    },
    "superClass": null,
    "implements": [],
    "body": [
      {
        "type": "ClassProperty",
        "key": {
          "type": "Identifier",
          "name": "a"
        },
        "value": {
          "type": "CallExpression",
          "callee": {
            "type": "Identifier",
            "name": "GoodGreeter"
          },
          "arguments": [],
          "optional": false
        },
        "accessibility": "public",
        "static": true,
        "readonly": false,
        "declare": false,
        "optional": false,
        "computed": false,
        "definite": false
      },
      {
        "type": "ClassProperty",
        "key": {
          "type": "Identifier",
          "name": "c"
        },
        "accessibility": "public",
        "static": true,
        "readonly": false,
        "declare": false,
        "optional": false,
        "computed": false,
        "typeAnnotation": {
          "type": "ETSTypeReference",
          "part": {
            "type": "ETSTypeReferencePart",
            "name": {
              "type": "Identifier",
              "name": "GoodGreeter"
            }
          }
        },
        "definite": false
      },
      {
        "type": "MethodDefinition",
        "key": {
          "type": "Identifier",
          "name": "main"
        },
        "kind": "method",
        "accessibility": "public",
        "static": true,
        "optional": false,
        "computed": false,
        "value": {
          "type": "FunctionExpression",
          "function": {
            "type": "ScriptFunction",
            "id": {
              "type": "Identifier",
              "name": "main"
            },
            "generator": false,
            "async": false,
            "expression": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "statements": [
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "m",
                        "typeAnnotation": {
                          "type": "ETSPrimitiveType"
                        }
                      },
                      "init": {
                        "type": "NumberLiteral",
                        "value": 1
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "n",
                        "typeAnnotation": {
                          "type": "ETSPrimitiveType"
                        }
                      },
                      "init": {
                        "type": "NumberLiteral",
                        "value": 2
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "f",
                        "typeAnnotation": {
                          "type": "ETSPrimitiveType"
                        }
                      },
                      "init": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "c"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "b"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "VariableDeclaration",
                  "declarations": [
                    {
                      "type": "VariableDeclarator",
                      "id": {
                        "type": "Identifier",
                        "name": "k",
                        "typeAnnotation": {
                          "type": "ETSTypeReference",
                          "part": {
                            "type": "ETSTypeReferencePart",
                            "name": {
                              "type": "Identifier",
                              "name": "string"
                            }
                          }
                        }
                      },
                      "init": {
                        "type": "MemberExpression",
                        "object": {
                          "type": "Identifier",
                          "name": "c"
                        },
                        "property": {
                          "type": "Identifier",
                          "name": "name"
                        },
                        "computed": false,
                        "optional": false
                      }
                    }
                  ],
                  "kind": "let"
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "console"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "log"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "BinaryExpression",
                        "operator": "+",
                        "left": {
                          "type": "Identifier",
                          "name": "m"
                        },
                        "right": {
                          "type": "Identifier",
                          "name": "n"
                        }
                      }
                    ],
                    "optional": false
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "CallExpression",
                    "callee": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "Identifier",
                        "name": "console"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "log"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "arguments": [
                      {
                        "type": "Identifier",
                        "name": "k"
                      }
                    ],
                    "optional": false
                  }
                }
              ]
            }
          }
        },
        "overloads": []
      }
    ]
  }
}
{
  "type": "ClassDeclaration",
  "definition": {
    "id": {
      "type": "Identifier",
      "name": "GoodGreeter"
    },
    "superClass": null,
    "implements": [],
    "body": [
      {
        "type": "ClassProperty",
        "key": {
          "type": "Identifier",
          "name": "name"
        },
        "accessibility": "public",
        "static": false,
        "readonly": false,
        "declare": false,
        "optional": false,
        "computed": false,
        "typeAnnotation": {
          "type": "ETSTypeReference",
          "part": {
            "type": "ETSTypeReferencePart",
            "name": {
              "type": "Identifier",
              "name": "string"
            }
          }
        },
        "definite": false
      },
      {
        "type": "ClassProperty",
        "key": {
          "type": "Identifier",
          "name": "b"
        },
        "accessibility": "public",
        "static": false,
        "readonly": false,
        "declare": false,
        "optional": false,
        "computed": false,
        "typeAnnotation": {
          "type": "ETSPrimitiveType"
        },
        "definite": false
      },
      {
        "type": "MethodDefinition",
        "key": {
          "type": "Identifier",
          "name": "fooExample"
        },
        "kind": "method",
        "accessibility": "public",
        "static": false,
        "optional": false,
        "computed": false,
        "value": {
          "type": "FunctionExpression",
          "function": {
            "type": "ScriptFunction",
            "id": {
              "type": "Identifier",
              "name": "fooExample"
            },
            "generator": false,
            "async": false,
            "expression": false,
            "params": [],
            "returnType": {
              "type": "ETSPrimitiveType"
            },
            "body": {
              "type": "BlockStatement",
              "statements": []
            }
          }
        },
        "overloads": []
      },
      {
        "type": "MethodDefinition",
        "key": {
          "type": "Identifier",
          "name": "$_invoke"
        },
        "kind": "method",
        "accessibility": "public",
        "static": true,
        "optional": false,
        "computed": false,
        "value": {
          "type": "FunctionExpression",
          "function": {
            "type": "ScriptFunction",
            "id": {
              "type": "Identifier",
              "name": "$_invoke"
            },
            "generator": false,
            "async": false,
            "expression": false,
            "params": [],
            "returnType": {
              "type": "ETSPrimitiveType"
            },
            "body": {
              "type": "BlockStatement",
              "statements": [
                {
                  "type": "ReturnStatement",
                  "argument": {
                    "type": "NumberLiteral",
                    "value": 5
                  }
                }
              ]
            }
          }
        },
        "overloads": []
      },
      {
        "type": "MethodDefinition",
        "key": {
          "type": "Identifier",
          "name": "constructor"
        },
        "kind": "constructor",
        "accessibility": "public",
        "static": false,
        "optional": false,
        "computed": false,
        "value": {
          "type": "FunctionExpression",
          "function": {
            "type": "ScriptFunction",
            "id": {
              "type": "Identifier",
              "name": "constructor"
            },
            "generator": false,
            "async": false,
            "expression": false,
            "params": [],
            "body": {
              "type": "BlockStatement",
              "statements": [
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "name"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "right": {
                      "type": "StringLiteral",
                      "value": "hello"
                    }
                  }
                },
                {
                  "type": "ExpressionStatement",
                  "expression": {
                    "type": "AssignmentExpression",
                    "operator": "=",
                    "left": {
                      "type": "MemberExpression",
                      "object": {
                        "type": "ThisExpression"
                      },
                      "property": {
                        "type": "Identifier",
                        "name": "b"
                      },
                      "computed": false,
                      "optional": false
                    },
                    "right": {
                      "type": "NumberLiteral",
                      "value": 7
                    }
                  }
                }
              ]
            }
          }
        },
        "overloads": []
      }
    ]
  }
}
